---
import Layout from '../../layouts/Layout.astro';
import { Image } from 'astro:assets';
import { projects, type Project } from '../../config/projects';
import { processMarkdown } from '../../utils/markdown';

// Define which repositories to pre-render and fetch their data
export async function getStaticPaths() {
  console.log('Generating static paths and fetching data for repositories...');
  
  const paths = await Promise.all(projects.map(async (project) => {
    try {
      // GitHub API endpoint for the repository
      const repoUrl = `https://api.github.com/repos/yuvalm11/${project.repo}`;
      const readmeUrl = `https://raw.githubusercontent.com/yuvalm11/${project.repo}/main/README.md`;

      // Fetch repository data
      const repoResponse = await fetch(repoUrl, {
        headers: {
          'Accept': 'application/vnd.github.v3+json',
          'User-Agent': 'Dev-Docs-Website'
        }
      });

      if (!repoResponse.ok) {
        throw new Error(`Failed to fetch repository data: ${repoResponse.status} ${repoResponse.statusText}`);
      }

      const repoData = await repoResponse.json();

      // Fetch README content
      const readmeResponse = await fetch(readmeUrl, {
        headers: {
          'Accept': 'application/vnd.github.v3.raw',
          'User-Agent': 'Dev-Docs-Website'
        }
      });

      if (!readmeResponse.ok) {
        throw new Error(`Failed to fetch README: ${readmeResponse.status} ${readmeResponse.statusText}`);
      }

      const readmeContent = await readmeResponse.text();
      const processedContent = await processMarkdown(readmeContent, project.repo);

      return {
        params: { repo: project.repo },
        props: { 
          project,
          repoData,
          processedContent
        }
      };
    } catch (error) {
      console.error(`Error fetching data for ${project.repo}:`, error);
      throw error;
    }
  }));

  console.log('Generated paths with data:', paths.map(p => p.params.repo));
  return paths;
}

interface Props {
  project: Project;
  repoData: any;
  processedContent: string;
}

const { repo } = Astro.params;
const { project, repoData, processedContent } = Astro.props;

if (!repo) {
  return Astro.redirect('/error?message=' + encodeURIComponent('No repository name provided'));
}

// Validate that the repo matches our project configuration
const configuredProject = projects.find(p => p.repo === repo);
if (!configuredProject) {
  return Astro.redirect('/error?message=' + encodeURIComponent('Repository not found in configuration'));
}
---

<Layout title={project.name}>
  <article class="prose dark:prose-invert max-w-none">
    <div class="mb-8">
      <div class="flex items-center justify-between mb-4">
        <h1 class="text-3xl font-bold text-gray-900 dark:text-white">
          {project.name}
        </h1>
      </div>
      <p class="text-gray-600 dark:text-gray-300 text-lg mb-4">
        {project.description}
      </p>
      <div class="flex flex-wrap gap-2 mb-4">
        {project.tags.map((tag) => (
          <span class="px-2 py-1 bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300 text-sm rounded-full">
            {tag}
          </span>
        ))}
      </div>
      <div class="flex items-center justify-between mb-6 text-sm text-gray-500 dark:text-gray-400">
        <div class="flex items-center space-x-4">
          <span>‚≠ê {repoData.stargazers_count} stars</span>
          <span>üîÄ {repoData.forks_count} forks</span>
          <span>üëÅÔ∏è {repoData.watchers_count} watchers</span>
          <span>üìù {repoData.language}</span>
        </div>
        <a
          href={project.githubUrl}
          target="_blank"
          rel="noopener noreferrer"
          class="github-link inline-flex items-center text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 transition-colors"
        >
          <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 24 24">
            <path fill-rule="evenodd" d="M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z" clip-rule="evenodd" />
          </svg>
          View on GitHub
        </a>
      </div>
      <div class="border-t border-gray-200 dark:border-[#333333] mb-6"></div>

      <div class="bg-white dark:bg-[#1a1a1a] rounded-lg shadow-md p-6">
        <div class="markdown-content">
          <Fragment set:html={processedContent} />
        </div>
      </div>
    </div>
  </article>
</Layout>

<style>
  .prose {
    max-width: 85ch;
    margin: 0 auto;
  }
  .prose img {
    margin: 1rem auto;
    border-radius: 0.5rem;
    display: block;
  }
  /* Add specific styles for images in markdown content */
  .markdown-content img {
    margin: 1rem auto;
    max-width: 100%;
    height: auto;
  }
  .prose pre {
    background-color: #1a1a1a;
    padding: 1rem;
    border-radius: 0.5rem;
    overflow-x: auto;
  }
  .prose code {
    background-color: #f3f4f6;
    padding: 0.2rem 0.4rem;
    border-radius: 0.25rem;
  }
  .dark .prose code {
    background-color: #374151;
  }
  /* Override link styles for the GitHub link */
  .github-link {
    color: inherit !important;
    text-decoration: none !important;
  }
  .github-link:hover {
    color: inherit !important;
    text-decoration: none !important;
  }
  .prose a {
    color: #2563eb;
    text-decoration: none;
  }
  .prose a:hover {
    text-decoration: underline;
  }
  .dark .prose a {
    color: #60a5fa;
  }
  /* Math styling */
  .prose .math {
    overflow-x: auto;
    overflow-y: hidden;
  }
  .prose .math-inline {
    display: inline-block;
  }
  /* Improved: Make KaTeX and math display blocks scrollable on mobile */
  .prose .math-display,
  .prose .katex-display,
  .math-display,
  .katex-display {
    overflow-x: auto !important;
    white-space: nowrap !important;
    max-width: 100% !important;
    display: block !important;
    padding-bottom: 0.5em;
  }
  /* Anchor link styling */
  .anchor-link {
    text-decoration: none;
    margin-left: 0.5rem;
    opacity: 0;
    transition: opacity 0.2s;
  }
  .prose h1:hover .anchor-link,
  .prose h2:hover .anchor-link,
  .prose h3:hover .anchor-link,
  .prose h4:hover .anchor-link,
  .prose h5:hover .anchor-link,
  .prose h6:hover .anchor-link {
    opacity: 1;
  }
  /* Video styling */
  .markdown-video {
    width: 100%;
    max-width: 100%;
    height: auto;
    margin: 1rem auto;
    border-radius: 0.5rem;
    display: block;
    background-color: #000;
  }

  /* Ensure videos are responsive */
  .prose video {
    max-width: 100%;
    height: auto;
  }

  /* Add a subtle border to videos */
  .markdown-content video {
    border: 1px solid #e5e7eb;
  }
  .dark .markdown-content video {
    border-color: #374151;
  }
  /* Prevent page from shrinking too much on mobile */
  body {
    min-width: 320px;
  }
  /* Allow horizontal scrolling for prose and markdown content */
  .prose, .markdown-content {
    overflow-x: auto;
    width: 100%;
    max-width: 85ch;
    margin: 0 auto;
  }
  @media (max-width: 600px) {
    .prose, .markdown-content {
      max-width: 100vw;
    }
  }
  /* Robust: Make all math display blocks scrollable */
  .prose .math-display,
  .prose .katex-display,
  .math-display,
  .katex-display,
  mjx-container {
    overflow-x: auto !important;
    white-space: nowrap !important;
    max-width: 100% !important;
    display: block !important;
    padding-bottom: 0.5em;
  }
</style>

<!-- Add KaTeX CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.16.9/dist/katex.min.css" integrity="sha384-n8MVd4RsNIU0tAv4ct0nTaAbDJwPJzDEaqSD1odI+WdtXRGWt2kTvGFasHpSy3SV" crossorigin="anonymous"> 